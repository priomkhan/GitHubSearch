apply plugin: 'com.android.application'

apply plugin: 'kotlin-android'

apply plugin: 'kotlin-android-extensions'

android {
    compileSdkVersion 29
    buildToolsVersion "29.0.2"
    defaultConfig {
        applicationId "com.priomkhan.githubsearch"
        minSdkVersion 26
        targetSdkVersion 29
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation"org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation 'androidx.core:core-ktx:1.1.0'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    implementation 'androidx.lifecycle:lifecycle-extensions:2.1.0'
    implementation 'androidx.lifecycle:lifecycle-viewmodel-ktx:2.1.0'

    //Library to Parsing JSON using Moshi tool in Kotlin
    implementation "com.squareup.moshi:moshi-kotlin:$moshi_version"

    //Retrofit is a type-safe HTTP client for Android and Java.
    // With Retrofit we can compose the HTTP connection easily through
    // a simple expressive interface just like an api document.
    def retrofit2_version = '2.6.2'
    implementation "com.squareup.retrofit2:retrofit:$retrofit2_version"

    // Retrofit and Moshi work together really well. And the manual work we had to do
    // of creating an adapter when I parsed JSON content will be done automatically by Retrofit.
    implementation "com.squareup.retrofit2:converter-moshi:$retrofit2_version"

    //A coroutine is a concurrency design pattern that you can use on Android
    // to simplify code that executes asynchronously.
    //On Android, coroutines help to solve two primary problems:
    //    Manage long-running tasks that might otherwise block the getData thread and cause your app to freeze.
    //    Providing getData-safety, or safely calling network or disk operations from the getData thread.
    def coroutines_version = "1.2.1"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutines_version"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutines_version"

    implementation 'com.squareup.retrofit2:adapter-rxjava2:2.6.2'


    // Android's recycler view component can display structure data, either as a list or a grid.
    def recyclerview_version ="1.0.0"
    implementation "androidx.recyclerview:recyclerview:$recyclerview_version"

    //Use to load the images at the runtime
    def glide_version = '4.10.0'
    implementation "com.github.bumptech.glide:glide:$glide_version"
    annotationProcessor "com.github.bumptech.glide:compiler:$glide_version"

    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'
}
